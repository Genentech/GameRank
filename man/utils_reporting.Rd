% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_reporting.R
\name{utils_reporting}
\alias{utils_reporting}
\alias{render_std_template}
\alias{render_backward_summary}
\alias{render_forward_summary}
\alias{render_bidirectional_summary}
\alias{render_lrsearch_summary}
\alias{render_random_summary}
\alias{render_game_rank_summary}
\alias{render_variable_checks_summary}
\alias{render_model_calibration_normal}
\alias{render_model_calibration_binomial}
\alias{render_model_calibration_cox}
\alias{render_influence_summary}
\title{Render a standard template reports for a given objects.}
\usage{
render_std_template(
  template_name,
  output_dir = NULL,
  params,
  output_file = NULL,
  envir = new.env(),
  ...
)

render_backward_summary(obj, output_dir = NULL, output_file = NULL)

render_forward_summary(obj, output_dir = NULL, output_file = NULL)

render_bidirectional_summary(obj, output_dir = NULL, output_file = NULL)

render_lrsearch_summary(obj, output_dir = NULL, output_file = NULL)

render_random_summary(obj, output_dir = NULL, output_file = NULL)

render_game_rank_summary(obj, output_dir = NULL, output_file = NULL)

render_variable_checks_summary(obj, output_dir = NULL, output_file = NULL)

render_model_calibration_normal(
  ds,
  dat,
  resp,
  selection,
  k,
  output_dir = NULL,
  output_file = NULL
)

render_model_calibration_binomial(
  ds,
  dat,
  resp,
  selection,
  k,
  output_dir = NULL,
  output_file = NULL
)

render_model_calibration_cox(
  ds,
  dat,
  resp,
  selection,
  k,
  u,
  output_dir = NULL,
  output_file = NULL
)

render_influence_summary(obj, output_dir = NULL, output_file = NULL)
}
\arguments{
\item{template_name}{File name of the standard template}

\item{output_dir}{Output directory to which to render}

\item{params}{The Rmd parameter list. Needs to match the expected 
parameter definitions of the Rmd template.}

\item{output_file}{Output filename (with or without suffix). Default NULL. 
If not NULL, it is appended to output_dir}

\item{...}{Further parameters passed to rmarkdown::render(...) function.}

\item{obj}{Algorithm results output from forward, backward and other 
selection methods}

\item{dat}{data.frame or tibble rows from the full dataseet provided to the
wrapper that should be used for generating or evaluating models.}

\item{resp}{Response variable being the lhs of the model formula}

\item{selection}{Current selection for model generation or evaluation}

\item{k}{Column from ds to use for split into training:validation:test via
1s, 2s and 3s.}

\item{u}{Landmark time point at which the survival probability is evaluated}

\item{mod}{For evaluation functions the model to be evaluated on dat}
}
\value{
render_... functions don't have return values. They generated the 
required output documents.
}
\description{
Render a standard template reports for a given objects.

Render a standard template report for a given object. (Internal function)
}
\examples{

vars <- grep( "the_|rnd", colnames(toy_data), value=TRUE )
resp <- "resp"
gmr <- game_rank( dat = toy_data, resp = resp, vars = vars, 
                  fn_train = fn_train_binomial, fn_eval = fn_eval_binomial_auroc,
                  m = 6L, dsi = c(1L,2L), maximize = TRUE, 
                  team_size = 3L, rounds = 10L, min_matches_per_var = 5L )
gmr$variable_ranking \%>\% as.data.frame
gmr_fsel <- gmr$game_rank_selection
  
\donttest{  render_game_rank_summary( gmr, getwd() ) }

}
