% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random.R
\name{random}
\alias{random}
\alias{random_selection}
\alias{random_selection.formula}
\title{Random search algorithm}
\usage{
random_selection(
  dat,
  resp,
  vars,
  fn_train = fn_train_binomial,
  fn_eval = fn_eval_binomial,
  m = NULL,
  ds = 5L,
  maximize = TRUE,
  nevals = 100L,
  ...
)

random_selection.formula(
  fo,
  dat,
  fn_train = fn_train_binomial,
  fn_eval = fn_eval_binomial,
  m = 5L,
  ds = 5L,
  maximize = TRUE,
  nevals = 100L,
  ...
)
}
\arguments{
\item{dat}{data.frame or tibble comprising data for model generation and validation.}

\item{resp}{Character string defining the response (lhs) of the model formula.}

\item{vars}{Character vector defining the list of variables for selection. Those are concatenated by '+' 
as the right hand side (rhs) of the modelling formula.}

\item{fn_train}{Function with signature function( dat, resp, selection, ... ) that returns a model or NULL in any other case on the given data dat.}

\item{fn_eval}{Function with signature function( dat, resp, selection, ... ) that returns a real number or NA in any other case, e.g. when model is NULL.}

\item{m}{Size of final partition size. 
Note this parameter is used for stopping only. Best selection will be determined by whole set of evaluated selections, i.e., can be larger than m.}

\item{ds}{Definition of (parallel) training:validation splits
- a matrix with d columns containing 1s and 2s, where 1 denotes sample is used for training the model and 2 denotes sample used for validation.
  The average of all d training:validation results is used for selection.
- an integer number determing the number of random training:validation splits that should be generated. The sampling will ensure a sufficient number
  of complete cases in the training split.}

\item{maximize}{A logic value determining if fn_eval is maximized (set to TRUE) or minimized (set to FALSE).}

\item{nevals}{Number of training:validation evaluations.}

\item{...}{An other arguments passed to fn_train or fn_eval during calls, e.g. maybe 'u = 365' for Survival evaluations specifying the landmark day.}

\item{fo}{Only for call with formula as first argument. Extracts lhs ~ rhs into resp and vars, and calls backward( dat, resp, vars, ... )}
}
\value{
List with elements
\describe{
 \item{response}{As from input parameters}
 \item{variables}{As from input parameters}
 \item{m}{As from input parameters}
 \item{splits}{As from input parameters}
 \item{maximize}{As from input parameters}
 \item{nevals}{As from input parameters}
 \item{start}{Start time of core algorithm loop}
 \item{end}{End time of core algorithm loop}
 \item{variable_selections}{Best selections overall (regardless of m)}
 \item{results}{Dataset with one record per train:validation evaluation}
 \item{agg_results}{Dataset with averaged performance over splits}
}
}
\description{
First constructs a random sampling plan of disjoint feature selections
that are covering all provided features for a predefined number of evaluations. Then
run training:validation evaluation for each selection, and returns the best combination.
}
\details{
The random search algorithm runs as follows:
\code{ \cr
1. Build a sampling matrix of disjoint and unique feature combinations
2. For each combination evaluate the model per training:validation splits.
3. Return the best selection.
}
}
